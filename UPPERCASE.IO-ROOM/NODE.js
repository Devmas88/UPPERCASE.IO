FOR_BOX(function(o){"use strict";o.BROADCAST=METHOD({run:function(t){var a=o.boxName+"/"+t.roomName,E=t.methodName,R=t.data;LAUNCH_ROOM_SERVER.broadcast({roomName:a,methodName:E,data:R}),void 0!==CPU_CLUSTERING.broadcast&&CPU_CLUSTERING.broadcast({methodName:"__LAUNCH_ROOM_SERVER__MESSAGE",data:{roomName:a,methodName:E,data:R}}),void 0!==SERVER_CLUSTERING.broadcast&&SERVER_CLUSTERING.broadcast({methodName:"__LAUNCH_ROOM_SERVER__MESSAGE",data:{roomName:a,methodName:E,data:R}})}})}),FOR_BOX(function(o){"use strict";o.ROOM=METHOD({run:function(t,a){LAUNCH_ROOM_SERVER.addInitRoomFunc(o.boxName+"/"+t,a)}})}),global.LAUNCH_ROOM_SERVER=LAUNCH_ROOM_SERVER=CLASS(function(o){"use strict";var t,a,E={},R={};return o.addInitRoomFunc=t=function(o,t){void 0===E[o]&&(E[o]=[]),E[o].push(t)},o.broadcast=a=function(o){var t=o.roomName,a=R[t];void 0!==a&&EACH(a,function(a){a({methodName:t+"/"+o.methodName,data:o.data})})},{init:function(o,t,_){var e,n;void 0!==CPU_CLUSTERING.on&&CPU_CLUSTERING.on("__LAUNCH_ROOM_SERVER__MESSAGE",a),void 0!==SERVER_CLUSTERING.on&&SERVER_CLUSTERING.on("__LAUNCH_ROOM_SERVER__MESSAGE",function(o){a(o),void 0!==CPU_CLUSTERING.broadcast&&CPU_CLUSTERING.broadcast({methodName:"__LAUNCH_ROOM_SERVER__MESSAGE",data:o})}),e=MULTI_PROTOCOL_SOCKET_SERVER(_,function(o,t,a,_){var e={};t("__ENTER_ROOM",function(n){var d=E[n],i=R[n];void 0===e[n]?(e[n]=1,void 0!==d&&EACH(d,function(E){E(o,function(o,a){t(n+"/"+o,a)},function(o,t){a(n+"/"+o,t)},function(o,t){_({methodName:n+"/"+o.methodName,data:o.data},t)})}),void 0===i&&(i=R[n]=[]),i.push(_)):e[n]+=1}),t("__EXIT_ROOM",function(o){void 0!==e[o]&&(e[o]-=1,0===e[o]&&(REMOVE({array:R[o],value:_}),0===R[o].length&&delete R[o],delete e[o]))}),t("__DISCONNECTED",function(){EACH(e,function(o,t){REMOVE({array:R[t],value:_}),0===R[t].length&&delete R[t]}),e=void 0})}),t.getWebSocketFixRequest=n=function(){return e.getWebSocketFixRequest()}}}});